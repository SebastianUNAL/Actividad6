/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package work.actividad6;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.lang.NumberFormatException;
/**
 *
 * @author ADMIN
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form Form
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Numero");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreate)
                        .addGap(56, 56, 56)
                        .addComponent(btnRead)
                        .addGap(60, 60, 60)
                        .addComponent(btnUpdate)
                        .addGap(56, 56, 56)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(125, 125, 125)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre)
                            .addComponent(txtNumero, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnRead)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(66, 66, 66))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed

        try {
            String newName = txtNombre.getText();
            long newNumber = Long.parseLong(txtNumero.getText());
            String nameNumberString;
            String name;
            long number;
            int index;
            
            File archivo = new File("friendsContact.txt");
            
            if (!archivo.exists()) {
                archivo.createNewFile();
            }
            
            RandomAccessFile raf = new RandomAccessFile(archivo, "rw");
            boolean found = false;
            
            while (raf.getFilePointer() < raf.length()) {
                nameNumberString = raf.readLine();
                String[] lineSplit = nameNumberString.split("!");
                
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
                
                if (name == newName || number == newNumber) {
                    found = true;
                    break;
                }
            }
            
            if (found == false) {
                nameNumberString = newName + "!" + String.valueOf(newNumber);
                
                raf.writeBytes(nameNumberString);
                raf.writeBytes(System.lineSeparator());
                System.out.println("Friend added");
                raf.close();
            } else {
                raf.close();
 
                System.out.println("Input name" + "does not exist");
            }
        }
            catch (IOException ioe) {
                System.out.println(ioe);
            }
            catch (NumberFormatException nef) {
                System.out.println(nef);
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        try {
            String nameNumberString;
            String name;
            long number;
            int index;
            
            File archivo = new File("friendsContact.txt");
            
            if (!archivo.exists()) {
                archivo.createNewFile();
            }
            
            RandomAccessFile raf = new RandomAccessFile(archivo, "rw");
            boolean found = false;
            
            while (raf.getFilePointer() < raf.length()) {
                nameNumberString = raf.readLine();
                
                String[] lineSplit = nameNumberString.split("!");
                
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
                
                System.out.println("Nombre amigo: " + name + "\n" + "Numero contacto: " + number + "\n");
            
            }
        }
        
        catch (IOException ioe){
            System.out.println(ioe);
            }
        catch (NumberFormatException nef){
                System.out.println(nef);
            }
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            
            String NametoUpdate = txtNombre.getText();
            long NumbertoUpdate = Long.parseLong(txtNumero.getText());
            
            String nameNumberString;
            String name;
            long number;
            int index;
            
            File archivo = new File("friendsContact.txt");
            
            if (!archivo.exists()) {
                archivo.createNewFile();
            }
            
            RandomAccessFile raf = new RandomAccessFile(archivo, "rw");
            boolean found = false;
            
            while (raf.getFilePointer() < raf.length()) {
                nameNumberString = raf.readLine();
                String[] lineSplit = nameNumberString.split("!");
                
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
                
                if (name.equals(NametoUpdate) || number == NumbertoUpdate) {
                    found = true;
                    break;
                }
                
                if (found == true) {
                    File tmpFile = new File("temp.txt");
                    RandomAccessFile tmpraf = new RandomAccessFile(tmpFile, "rw");

                    raf.seek(0);

                    while (raf.getFilePointer() < raf.length()) {
                        nameNumberString = raf.readLine();

                        index = nameNumberString.indexOf("!");
                        name = nameNumberString.substring(0, index);


                        if (name.equals(NametoUpdate)) {
                            nameNumberString = name + "!" + String.valueOf(NumbertoUpdate);
                        }

                        tmpraf.writeBytes(nameNumberString);

                        tmpraf.writeBytes(System.lineSeparator());
                    }

                    raf.seek(0);
                    tmpraf.seek(0);

                    while (tmpraf.getFilePointer() < tmpraf.length()) {
                        raf.writeBytes(tmpraf.readLine());
                        raf.writeBytes(System.lineSeparator());
                    }

                    raf.setLength(tmpraf.length());

                    tmpraf.close();
                    raf.close();

                    tmpFile.delete();
                    
                    System.out.println("Friend updated");
                
                } else {
                    raf.close();
                    System.out.println("Input name" + "does not exist");
                }
            }
        }
        catch (IOException ioe) {
            System.out.println(ioe);
        }
        catch (NumberFormatException nef) {
            System.out.println(nef);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
            try {
                String newName = txtNombre.getText();
                
                String nameNumberString;
                String name;
                long number;
                int index;

                File archivo = new File("friendsContact.txt");

                if (!archivo.exists()) {
                    archivo.createNewFile();
                }

                RandomAccessFile raf = new RandomAccessFile(archivo, "rw");
                boolean found = false;

                while (raf.getFilePointer() < raf.length()) {

                    nameNumberString = raf.readLine();


                    String[] lineSplit = nameNumberString.split("!");

                    name = lineSplit[0];
                    number = Long.parseLong(lineSplit[1]);

                    if (name.equals(newName)) {
                        found = true;
                        break;
                    }
                }

                if (found == true) {
                    File tmpFile = new File("temp.txt");

                    RandomAccessFile tmpraf = new RandomAccessFile(tmpFile, "rw");


                    raf.seek(0);


                    while (raf.getFilePointer() < raf.length()) {
                        
                        nameNumberString = raf.readLine();

                        index = nameNumberString.indexOf("!");
                        name = nameNumberString.substring(0, index);

                        if (name.equals(newName)) {
                            continue;
                        }

                        tmpraf.writeBytes(nameNumberString);

                        tmpraf.writeBytes(System.lineSeparator());
                    }

                    raf.seek(0);
                    tmpraf.seek(0);

                    while (tmpraf.getFilePointer() < tmpraf.length()) {
                        raf.writeBytes(tmpraf.readLine());
                        raf.writeBytes(System.lineSeparator());
                    }

                    raf.setLength(tmpraf.length());

                    tmpraf.close();
                    raf.close();

                    tmpFile.delete();

                    System.out.println(" Friend deleted. ");
                }

                else {

                    raf.close();

                    System.out.println(" Input name " + " does not exist ");
            }
        }
           catch (IOException ioe) {
            System.out.println(ioe);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
